[{"filePath":"/home/henriqwe/Documents/projects/tcc/src/App.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'App' has a complexity of 6. Maximum allowed is 0.","line":28,"column":16,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":61,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { TabKey } from \"./types\";\nimport { TabButton } from \"./components/core/TabButton\";\nimport { CatalogComposition } from \"./pages/CatalogComposition\";\nimport { CatalogPresentationalContainer } from \"./pages/CatalogPresentationalContainer\";\nimport { CatalogHOC } from \"./pages/CatalogHOC\";\nimport { CatalogRenderProps } from \"./pages/CatalogRenderProps\";\nimport { CatalogCompound } from \"./pages/CatalogCompound\";\n\n/**\n * Mini‑benchmark (workbench) para medir métricas em 5 padrões de componentes.\n * Requisito comum: Catálogo de Produtos com busca, filtros, sort, paginação,\n * estados de loading/erro/retry, modal de detalhes e wishlist local.\n *\n * Padrões implementados:\n *  1) Composition\n *  2) Presentational & Container\n *  3) HOC (Higher‑Order Components)\n *  4) Render Props\n *  5) Compound Components\n *\n * Observações:\n *  - Código intencionalmente separado por padrão para permitir comparação.\n *  - Sem libs externas (além de React). Estilos simples via classes utilitárias.\n *  - Fake API com latência 100–500ms e falha aleatória ~10%.\n */\n\nexport default function App() {\n  const [tab, setTab] = React.useState<TabKey>(\"composition\");\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        Mini-Benchmark - Catálogo de Produtos\n      </h1>\n      <div className=\"flex gap-2 mb-4 flex-wrap\">\n        <TabButton current={tab} k=\"composition\" setTab={setTab}>\n          Composition\n        </TabButton>\n        <TabButton current={tab} k=\"presentational\" setTab={setTab}>\n          Presentational/Container\n        </TabButton>\n        <TabButton current={tab} k=\"hoc\" setTab={setTab}>\n          HOC\n        </TabButton>\n        <TabButton current={tab} k=\"renderprops\" setTab={setTab}>\n          Render Props\n        </TabButton>\n        <TabButton current={tab} k=\"compound\" setTab={setTab}>\n          Compound Components\n        </TabButton>\n      </div>\n      <div className=\"space-y-6\">\n        {tab === \"composition\" && <CatalogComposition />}\n        {tab === \"presentational\" && <CatalogPresentationalContainer />}\n        {tab === \"hoc\" && <CatalogHOC />}\n        {tab === \"renderprops\" && <CatalogRenderProps />}\n        {tab === \"compound\" && <CatalogCompound />}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/CategoryFilter/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CategoryFilter' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":27,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":14,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":23,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":19,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":19,"endColumn":42}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CATEGORIES } from \"../../../mocks/categories\";\n\nexport function CategoryFilter({\n  value,\n  onToggle,\n}: {\n  value: string[];\n  onToggle: (cat: string) => void;\n}) {\n  return (\n    <fieldset className=\"text-sm\">\n      <legend className=\"font-medium mb-1\">Categorias</legend>\n      <div className=\"flex gap-3 flex-wrap\">\n        {CATEGORIES.map((c) => (\n          <label key={c} className=\"flex items-center gap-1\">\n            <input\n              type=\"checkbox\"\n              checked={value.includes(c)}\n              onChange={() => onToggle(c)}\n            />{\" \"}\n            {c}\n          </label>\n        ))}\n      </div>\n    </fieldset>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/Layout/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'Layout' has a complexity of 4. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":25,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function Layout({\n  header,\n  toolbar,\n  content,\n  footer,\n}: {\n  header?: React.ReactNode;\n  toolbar?: React.ReactNode;\n  content: React.ReactNode;\n  footer?: React.ReactNode;\n}) {\n  return (\n    <div\n      className=\"p-4 rounded-2xl shadow\"\n      style={{ background: \"#fafafa\", border: \"1px solid #eee\" }}\n    >\n      {header && <div className=\"mb-3\">{header}</div>}\n      {toolbar && (\n        <div className=\"mb-3 flex gap-3 items-end flex-wrap\">{toolbar}</div>\n      )}\n      <div className=\"mb-3\">{content}</div>\n      {footer && <div className=\"mt-3\">{footer}</div>}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/Pagination/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'Pagination' has a complexity of 1. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":34,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":18,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":18,"endColumn":40},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":28,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":28,"endColumn":40}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function Pagination({\n  page,\n  pageSize,\n  total,\n  onPage,\n}: {\n  page: number;\n  pageSize: number;\n  total: number;\n  onPage: (p: number) => void;\n}) {\n  const pages = Math.max(1, Math.ceil(total / pageSize));\n  return (\n    <div className=\"flex items-center gap-2\">\n      <button\n        className=\"border px-3 py-1 rounded\"\n        disabled={page <= 1}\n        onClick={() => onPage(page - 1)}\n      >\n        Anterior\n      </button>\n      <span className=\"text-sm\">\n        Página {page} / {pages}\n      </span>\n      <button\n        className=\"border px-3 py-1 rounded\"\n        disabled={page >= pages}\n        onClick={() => onPage(page + 1)}\n      >\n        Próxima\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/ProductCard/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'ProductCard' has a complexity of 3. Maximum allowed is 0.","line":5,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":49,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 2 to the 0 allowed.","line":5,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":5,"endColumn":28},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":33,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":33,"endColumn":37},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":41,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":41,"endColumn":46}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { Product } from \"../../../types\";\nimport { Badge } from \"../../core/Badge\";\nimport { StarRating } from \"../../core/StarRating\";\n\nexport function ProductCard({\n  p,\n  onOpen,\n  wish,\n  onToggleWish,\n}: {\n  p: Product;\n  onOpen: (p: Product) => void;\n  wish: boolean;\n  onToggleWish: (id: string) => void;\n}) {\n  return (\n    <div className=\"border rounded-xl p-3 flex flex-col gap-2\">\n      <div className=\"flex justify-between items-center\">\n        <strong>{p.name}</strong>\n        <Badge status={p.status} />\n      </div>\n      <div className=\"flex justify-between text-sm opacity-80\">\n        <span>Categoria: {p.category}</span>\n        <span>\n          <StarRating value={p.rating} />\n        </span>\n      </div>\n      <div className=\"flex justify-between items-center\">\n        <span className=\"text-lg font-semibold\">R$ {p.price.toFixed(2)}</span>\n        <div className=\"flex gap-2\">\n          <button\n            className=\"border rounded px-2 py-1\"\n            onClick={() => onOpen(p)}\n          >\n            Detalhes\n          </button>\n          <button\n            className={`rounded px-2 py-1 ${\n              wish ? \"bg-black text-white\" : \"border\"\n            }`}\n            onClick={() => onToggleWish(p.id)}\n          >\n            {wish ? \"♥\" : \"♡\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/SearchInput/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'SearchInput' has a complexity of 1. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":14,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":14,"endColumn":50}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function SearchInput({\n  value,\n  onChange,\n}: {\n  value: string;\n  onChange: (v: string) => void;\n}) {\n  return (\n    <label className=\"text-sm font-medium\">\n      Busca\n      <input\n        className=\"block border rounded-lg px-3 py-2 w-60\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder=\"Produto…\"\n      />\n    </label>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompositionPattern/ShortSelect/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'SortSelect' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":25,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":16,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":16,"endColumn":73}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { QueryParams } from \"../../../types\";\n\nexport function SortSelect({\n  value,\n  onChange,\n}: {\n  value: QueryParams[\"sort\"];\n  onChange: (v: QueryParams[\"sort\"]) => void;\n}) {\n  return (\n    <label className=\"text-sm font-medium\">\n      Ordenar\n      <select\n        className=\"block border rounded-lg px-3 py-2 w-56\"\n        value={value}\n        onChange={(e) => onChange(e.target.value as QueryParams[\"sort\"])}\n      >\n        <option value=\"price_asc\">Preço ↑</option>\n        <option value=\"price_desc\">Preço ↓</option>\n        <option value=\"rating_desc\">Avaliação ↓</option>\n        <option value=\"rating_asc\">Avaliação ↑</option>\n      </select>\n    </label>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Clear/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogClear' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":8,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":15,"endColumn":11}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogClear() {\n  const { setParams } = useCatalogCtx();\n  return (\n    <button\n      className=\"border rounded px-3 py-2\"\n      onClick={() =>\n        setParams({\n          page: 1,\n          pageSize: 20,\n          q: \"\",\n          categories: [],\n          sort: \"price_asc\",\n        })\n      }\n    >\n      Limpar\n    </button>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Feedback/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogFeedback' has a complexity of 6. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":21,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":3,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":3,"endColumn":32}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogFeedback() {\n  const { state } = useCatalogCtx();\n  const { loading, error, retry } = state;\n  const empty = !loading && !error && state.items.length === 0;\n  return (\n    <>\n      {loading && <div className=\"p-3 border rounded mb-3\">Carregando…</div>}\n      {error && (\n        <div className=\"p-3 border rounded mb-3 bg-red-50 flex items-center justify-between\">\n          <span>Erro: {error}</span>\n          <button className=\"border rounded px-2 py-1\" onClick={retry}>\n            Tentar de novo\n          </button>\n        </div>\n      )}\n      {empty && <div className=\"p-3 border rounded\">Nenhum resultado</div>}\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Filters/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogFilters' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":15,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":6,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":13,"endColumn":8},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":7,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":13,"endColumn":7},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":7,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":7,"endColumn":21},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":10,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":10,"endColumn":45}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { CategoryFilter } from \"../../../../CompositionPattern/CategoryFilter\";\nimport { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogFilters() {\n  const { params, setParams } = useCatalogCtx();\n  const toggleCat = (c: string) =>\n    setParams((p) => ({\n      ...p,\n      categories: p.categories.includes(c)\n        ? p.categories.filter((x) => x !== c)\n        : [...p.categories, c],\n      page: 1,\n    }));\n  return <CategoryFilter value={params.categories} onToggle={toggleCat} />;\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Footer/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogFooter' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":17,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":13,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":13,"endColumn":63},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":13,"column":35,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":13,"endColumn":62}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Pagination } from \"../../../../CompositionPattern/Pagination\";\nimport { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogFooter() {\n  const { params, setParams, state } = useCatalogCtx();\n  return (\n    <div className=\"flex items-center justify-between mt-3\">\n      <div className=\"text-sm opacity-80\">Total: {state.total} itens</div>\n      <Pagination\n        page={params.page}\n        pageSize={params.pageSize}\n        total={state.total}\n        onPage={(pg) => setParams((p) => ({ ...p, page: pg }))}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Header/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogHeader' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogHeader() {\n  const { wishlist } = useCatalogCtx();\n  return (\n    <div className=\"flex items-center justify-between mb-3\">\n      <h2 className=\"text-xl font-semibold\">Catálogo (Compound Components)</h2>\n      <div className=\"text-sm\">\n        Wishlist: <strong>{wishlist.count}</strong>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/List/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogList' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":22,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":11,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":19,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { ProductCard } from \"../../../../CompositionPattern/ProductCard\";\nimport { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogList() {\n  const { state, wishlist, modal } = useCatalogCtx();\n  const { items } = state;\n  const { set: wish, toggle } = wishlist;\n  const { setOpen } = modal;\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {items.map((p) => (\n        <ProductCard\n          key={p.id}\n          p={p}\n          wish={wish.has(p.id)}\n          onToggleWish={toggle}\n          onOpen={setOpen}\n        />\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Root/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogRoot' has a complexity of 2. Maximum allowed is 0.","line":11,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":55,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":37,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":37,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { CatalogContextType } from \"../../contexts/types\";\nimport { CatalogCtx } from \"../../contexts\";\nimport type { Product, QueryParams } from \"../../../../../types\";\nimport { useProducts } from \"../../../../../hooks/useProducts\";\nimport { useWishlist } from \"../../../../../hooks/useWishlist\";\nimport { Modal } from \"../../../../core/Modal\";\nimport { Badge } from \"../../../../core/Badge\";\nimport { StarRating } from \"../../../../core/StarRating\";\n\nexport function CatalogRoot({ children }: { children: React.ReactNode }) {\n  const [params, setParams] = React.useState<QueryParams>({\n    page: 1,\n    pageSize: 20,\n    q: \"\",\n    categories: [],\n    sort: \"price_asc\",\n  });\n  const state = useProducts(params);\n  const wishlist = useWishlist();\n  const [open, setOpen] = React.useState<Product | null>(null);\n  const value: CatalogContextType = {\n    params,\n    setParams,\n    state,\n    wishlist,\n    modal: { open, setOpen },\n  };\n  return (\n    <CatalogCtx.Provider value={value}>\n      <div\n        className=\"p-4 rounded-2xl shadow\"\n        style={{ background: \"#fafafa\", border: \"1px solid #eee\" }}\n      >\n        {children}\n      </div>\n      <Modal open={!!open} onClose={() => setOpen(null)}>\n        {open && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <strong>{open.name}</strong>\n              <Badge status={open.status} />\n            </div>\n            <div>Categoria: {open.category}</div>\n            <div>Preço: R$ {open.price.toFixed(2)}</div>\n            <div>\n              Avaliação: <StarRating value={open.rating} />\n            </div>\n            <p className=\"opacity-80 text-sm\">{open.description}</p>\n          </div>\n        )}\n      </Modal>\n    </CatalogCtx.Provider>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Search/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogSearch' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":9,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":9,"endColumn":67},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":9,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":9,"endColumn":66}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SearchInput } from \"../../../../CompositionPattern/SearchInput\";\nimport { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogSearch() {\n  const { params, setParams } = useCatalogCtx();\n  return (\n    <SearchInput\n      value={params.q}\n      onChange={(v) => setParams((p) => ({ ...p, q: v, page: 1 }))}\n    />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/components/Sort/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogSort' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":12,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":9,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":9,"endColumn":70},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":9,"column":34,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":9,"endColumn":69}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { SortSelect } from \"../../../../CompositionPattern/ShortSelect\";\nimport { useCatalogCtx } from \"../../contexts\";\n\nexport function CatalogSort() {\n  const { params, setParams } = useCatalogCtx();\n  return (\n    <SortSelect\n      value={params.sort}\n      onChange={(v) => setParams((p) => ({ ...p, sort: v, page: 1 }))}\n    />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/contexts/index.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'useCatalogCtx' has a complexity of 2. Maximum allowed is 0.","line":6,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":11,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":6,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":6,"endColumn":30}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { CatalogContextType } from \"./types\";\n\nexport const CatalogCtx = React.createContext<CatalogContextType | null>(null);\n\nexport function useCatalogCtx() {\n  const ctx = React.useContext(CatalogCtx);\n  if (!ctx)\n    throw new Error(\"Catalog.* deve ser usado dentro de <Catalog.Root>\");\n  return ctx;\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/contexts/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/CompoundComponents/Catalog/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/HOC/CatalogHOCBase/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogHOCBase' has a complexity of 7. Maximum allowed is 0.","line":16,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":124,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":33,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":33,"endColumn":74},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":33,"column":41,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":33,"endColumn":73},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":34,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":35,"endColumn":51},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":35,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":35,"endColumn":50},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":36,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":43,"endColumn":8},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":37,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":43,"endColumn":7},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":37,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":37,"endColumn":21},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":40,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":40,"endColumn":45},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":61,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":68,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":87,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":95,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":103,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":103,"endColumn":65},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":103,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":103,"endColumn":64},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":106,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":106,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type {\n  Product,\n  QueryParams,\n  WithProductsInjected,\n} from \"../../../types\";\nimport { SearchInput } from \"../../CompositionPattern/SearchInput\";\nimport { ProductCard } from \"../../CompositionPattern/ProductCard\";\nimport { Pagination } from \"../../CompositionPattern/Pagination\";\nimport { Modal } from \"../../core/Modal\";\nimport { StarRating } from \"../../core/StarRating\";\nimport { SortSelect } from \"../../CompositionPattern/ShortSelect\";\nimport { CategoryFilter } from \"../../CompositionPattern/CategoryFilter\";\nimport { Badge } from \"../../core/Badge\";\n\nexport function CatalogHOCBase({\n  items,\n  total,\n  loading,\n  error,\n  retry,\n  params,\n  setParams,\n  wish,\n  toggleWish,\n  wishCount,\n}: WithProductsInjected & {\n  wish: Set<string>;\n  toggleWish: (id: string) => void;\n  wishCount: number;\n}) {\n  const [open, setOpen] = React.useState<Product | null>(null);\n  const setQ = (v: string) => setParams((p) => ({ ...p, q: v, page: 1 }));\n  const setSort = (v: QueryParams[\"sort\"]) =>\n    setParams((p) => ({ ...p, sort: v, page: 1 }));\n  const toggleCat = (c: string) =>\n    setParams((p) => ({\n      ...p,\n      categories: p.categories.includes(c)\n        ? p.categories.filter((x) => x !== c)\n        : [...p.categories, c],\n      page: 1,\n    }));\n  return (\n    <div\n      className=\"p-4 rounded-2xl shadow\"\n      style={{ background: \"#fafafa\", border: \"1px solid #eee\" }}\n    >\n      <div className=\"flex items-center justify-between mb-3\">\n        <h2 className=\"text-xl font-semibold\">Catálogo (HOC)</h2>\n        <div className=\"text-sm\">\n          Wishlist: <strong>{wishCount}</strong>\n        </div>\n      </div>\n      <div className=\"mb-3 flex gap-3 items-end flex-wrap\">\n        <SearchInput value={params.q} onChange={setQ} />\n        <SortSelect value={params.sort} onChange={setSort} />\n        <CategoryFilter value={params.categories} onToggle={toggleCat} />\n        <button\n          className=\"border rounded px-3 py-2\"\n          onClick={() =>\n            setParams({\n              page: 1,\n              pageSize: 20,\n              q: \"\",\n              categories: [],\n              sort: \"price_asc\",\n            })\n          }\n        >\n          Limpar\n        </button>\n      </div>\n      {loading && <div className=\"p-3 border rounded mb-3\">Carregando…</div>}\n      {error && (\n        <div className=\"p-3 border rounded mb-3 bg-red-50 flex items-center justify-between\">\n          <span>Erro: {error}</span>\n          <button className=\"border rounded px-2 py-1\" onClick={retry}>\n            Tentar de novo\n          </button>\n        </div>\n      )}\n      {!loading && !error && items.length === 0 && (\n        <div className=\"p-3 border rounded\">Nenhum resultado</div>\n      )}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {items.map((p) => (\n          <ProductCard\n            key={p.id}\n            p={p}\n            wish={wish.has(p.id)}\n            onToggleWish={toggleWish}\n            onOpen={setOpen}\n          />\n        ))}\n      </div>\n      <div className=\"flex items-center justify-between mt-3\">\n        <div className=\"text-sm opacity-80\">Total: {total} itens</div>\n        <Pagination\n          page={params.page}\n          pageSize={params.pageSize}\n          total={total}\n          onPage={(pg) => setParams((p) => ({ ...p, page: pg }))}\n        />\n      </div>\n      <Modal open={!!open} onClose={() => setOpen(null)}>\n        {open && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <strong>{open.name}</strong>\n              <Badge status={open.status} />\n            </div>\n            <div>Categoria: {open.category}</div>\n            <div>Preço: R$ {open.price.toFixed(2)}</div>\n            <div>\n              Avaliação: <StarRating value={open.rating} />\n            </div>\n            <p className=\"opacity-80 text-sm\">{open.description}</p>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/HOC/WithProducts/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'WithProducts' has a complexity of 1. Maximum allowed is 0.","line":5,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'WithProducts' has a complexity of 1. Maximum allowed is 0.","line":8,"column":10,"nodeType":"FunctionExpression","messageId":"complex","endLine":30,"endColumn":4}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { QueryParams, WithProductsInjected } from \"../../../types\";\nimport { useProducts } from \"../../../hooks/useProducts\";\n\nexport function WithProducts<T extends WithProductsInjected>(\n  Component: React.ComponentType<T>\n) {\n  return function WithProducts(props: Omit<T, keyof WithProductsInjected>) {\n    const [params, setParams] = React.useState<QueryParams>({\n      page: 1,\n      pageSize: 20,\n      q: \"\",\n      categories: [],\n      sort: \"price_asc\",\n    });\n    const { items, total, loading, error, retry } = useProducts(params);\n    return (\n      // @ts-expect-error – inject props\n      <Component\n        {...props}\n        items={items}\n        total={total}\n        loading={loading}\n        error={error}\n        retry={retry}\n        params={params}\n        setParams={setParams}\n      />\n    );\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/HOC/WithWishlist/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'WithWishlist' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Function 'WithWishlist' has a complexity of 1. Maximum allowed is 0.","line":10,"column":10,"nodeType":"FunctionExpression","messageId":"complex","endLine":18,"endColumn":4}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useWishlist } from \"../../../hooks/useWishlist\";\n\nexport function WithWishlist<\n  T extends {\n    wish: Set<string>;\n    toggleWish: (id: string) => void;\n    wishCount: number;\n  }\n>(Component: React.ComponentType<T>) {\n  return function WithWishlist(\n    props: Omit<T, \"wish\" | \"toggleWish\" | \"wishCount\">\n  ) {\n    const { set: wish, toggle, count } = useWishlist();\n    return (\n      // @ts-expect-error – inject props\n      <Component {...props} wish={wish} toggleWish={toggle} wishCount={count} />\n    );\n  };\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/PresentationalAndContainerPattern/CatalogHeaderUI/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogHeaderUI' has a complexity of 1. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":16,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function CatalogHeaderUI({\n  title,\n  count,\n}: {\n  title: string;\n  count: number;\n}) {\n  return (\n    <div className=\"flex items-center justify-between\">\n      <h2 className=\"text-xl font-semibold\">{title}</h2>\n      <div className=\"text-sm\">\n        Wishlist: <strong>{count}</strong>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/PresentationalAndContainerPattern/FeebackUI/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'FeedbackUI' has a complexity of 6. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":28,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function FeedbackUI({\n  loading,\n  error,\n  onRetry,\n  empty,\n}: {\n  loading: boolean;\n  error: string | null;\n  onRetry: () => void;\n  empty: boolean;\n}) {\n  return (\n    <>\n      {loading && <div className=\"p-3 border rounded mb-3\">Carregando…</div>}\n      {error && (\n        <div className=\"p-3 border rounded mb-3 bg-red-50 flex items-center justify-between\">\n          <span>Erro: {error}</span>\n          <button className=\"border rounded px-2 py-1\" onClick={onRetry}>\n            Tentar de novo\n          </button>\n        </div>\n      )}\n      {!loading && !error && empty && (\n        <div className=\"p-3 border rounded\">Nenhum resultado</div>\n      )}\n    </>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/PresentationalAndContainerPattern/FooterUI/indext.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'FooterUI' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":25,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Pagination } from \"../../CompositionPattern/Pagination\";\n\nexport function FooterUI({\n  page,\n  pageSize,\n  total,\n  onPage,\n}: {\n  page: number;\n  pageSize: number;\n  total: number;\n  onPage: (p: number) => void;\n}) {\n  return (\n    <div className=\"flex items-center justify-between mt-3\">\n      <div className=\"text-sm opacity-80\">Total: {total} itens</div>\n      <Pagination\n        page={page}\n        pageSize={pageSize}\n        total={total}\n        onPage={onPage}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/PresentationalAndContainerPattern/ListUI/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'ListUI' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":28,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":17,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":25,"endColumn":8}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { Product } from \"../../../types\";\nimport { ProductCard } from \"../../CompositionPattern/ProductCard\";\n\nexport function ListUI({\n  items,\n  wish,\n  onOpen,\n  onToggleWish,\n}: {\n  items: Product[];\n  wish: Set<string>;\n  onOpen: (p: Product) => void;\n  onToggleWish: (id: string) => void;\n}) {\n  return (\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {items.map((p) => (\n        <ProductCard\n          key={p.id}\n          p={p}\n          wish={wish.has(p.id)}\n          onToggleWish={onToggleWish}\n          onOpen={onOpen}\n        />\n      ))}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/PresentationalAndContainerPattern/ToolbarUI/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'ToolbarUI' has a complexity of 1. Maximum allowed is 0.","line":6,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":33,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { QueryParams } from \"../../../types\";\nimport { CategoryFilter } from \"../../CompositionPattern/CategoryFilter\";\nimport { SearchInput } from \"../../CompositionPattern/SearchInput\";\nimport { SortSelect } from \"../../CompositionPattern/ShortSelect\";\n\nexport function ToolbarUI({\n  q,\n  onQ,\n  sort,\n  onSort,\n  cats,\n  onToggleCat,\n  onClear,\n}: {\n  q: string;\n  onQ: (v: string) => void;\n  sort: QueryParams[\"sort\"];\n  onSort: (v: QueryParams[\"sort\"]) => void;\n  cats: string[];\n  onToggleCat: (c: string) => void;\n  onClear: () => void;\n}) {\n  return (\n    <div className=\"mb-3 flex gap-3 items-end flex-wrap\">\n      <SearchInput value={q} onChange={onQ} />\n      <SortSelect value={sort} onChange={onSort} />\n      <CategoryFilter value={cats} onToggle={onToggleCat} />\n      <button className=\"border rounded px-3 py-2\" onClick={onClear}>\n        Limpar\n      </button>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/RenderProps/ProductsFetcher/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'ProductsFetcher' has a complexity of 1. Maximum allowed is 0.","line":4,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":19,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useProducts } from \"../../../hooks/useProducts\";\nimport type { Product, QueryParams } from \"../../../types\";\n\nexport function ProductsFetcher({\n  params,\n  children,\n}: {\n  params: QueryParams;\n  children: (s: {\n    items: Product[];\n    total: number;\n    loading: boolean;\n    error: string | null;\n    retry: () => void;\n  }) => React.ReactNode;\n}) {\n  const state = useProducts(params);\n  return <>{children(state)}</>;\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/core/Badge/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'Badge' has a complexity of 5. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":31,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 6 to the 0 allowed.","line":3,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":3,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { Status } from \"../../../types\";\n\nexport function Badge({ status }: { status: Status }) {\n  const color =\n    status === \"in_stock\"\n      ? \"#16a34a\"\n      : status === \"preorder\"\n      ? \"#d97706\"\n      : \"#dc2626\";\n  const text =\n    status === \"in_stock\"\n      ? \"Em estoque\"\n      : status === \"preorder\"\n      ? \"Pré-venda\"\n      : \"Indisponível\";\n  return (\n    <span\n      style={{\n        display: \"inline-block\",\n        padding: \"2px 8px\",\n        borderRadius: 999,\n        background: color + \"20\",\n        color,\n        fontSize: 12,\n        fontWeight: 600,\n      }}\n    >\n      {text}\n    </span>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/core/Modal/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'Modal' has a complexity of 2. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":55,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":1,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":1,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function Modal({\n  open,\n  onClose,\n  children,\n}: {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}) {\n  if (!open) return null;\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        inset: 0,\n        background: \"#0006\",\n        display: \"grid\",\n        placeItems: \"center\",\n        zIndex: 50,\n      }}\n    >\n      <div\n        style={{\n          background: \"#fff\",\n          borderRadius: 12,\n          padding: 16,\n          maxWidth: 640,\n          width: \"90%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            marginBottom: 8,\n          }}\n        >\n          <strong>Detalhes</strong>\n          <button\n            onClick={onClose}\n            style={{\n              border: \"1px solid #ddd\",\n              borderRadius: 8,\n              padding: \"6px 10px\",\n            }}\n          >\n            Fechar\n          </button>\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/core/StarRating/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'StarRating' has a complexity of 1. Maximum allowed is 0.","line":1,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":9,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":4,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":6,"endColumn":8},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":4,"column":45,"nodeType":null,"messageId":"refactorFunction","endLine":4,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"export function StarRating({ value }: { value: number }) {\n  return (\n    <span aria-label={`rating ${value}`}>\n      {Array.from({ length: 5 }).map((_, i) => (\n        <span key={i}>{i < value ? \"★\" : \"☆\"}</span>\n      ))}\n    </span>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/components/core/TabButton/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'TabButton' has a complexity of 2. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":25,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":3,"column":17,"nodeType":null,"messageId":"refactorFunction","endLine":3,"endColumn":26},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":17,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":17,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { TabKey } from \"../../../types\";\n\nexport function TabButton({\n  current,\n  k,\n  setTab,\n  children,\n}: {\n  current: TabKey;\n  k: TabKey;\n  setTab: (k: TabKey) => void;\n  children: React.ReactNode;\n}) {\n  const active = current === k;\n  return (\n    <button\n      onClick={() => setTab(k)}\n      className={`px-3 py-1.5 rounded-xl border ${\n        active ? \"bg-black text-white\" : \"bg-white\"\n      }`}\n    >\n      {children}\n    </button>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/hooks/useDebounce.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'useDebounced' has a complexity of 2. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":10,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":5,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":8,"endColumn":4},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":6,"column":27,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":6,"endColumn":44},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":7,"column":12,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":7,"endColumn":34}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\n\nexport function useDebounced<T>(value: T, ms = 400) {\n  const [v, setV] = React.useState(value);\n  React.useEffect(() => {\n    const id = setTimeout(() => setV(value), ms);\n    return () => clearTimeout(id);\n  }, [value, ms]);\n  return v;\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/hooks/useProducts.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'useProducts' has a complexity of 1. Maximum allowed is 0.","line":6,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":30,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Async arrow function has a complexity of 4. Maximum allowed is 0.","line":14,"column":38,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":25,"endColumn":4},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":14,"column":47,"nodeType":null,"messageId":"refactorFunction","endLine":14,"endColumn":49},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":26,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":28,"endColumn":4}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { Paged, Product, QueryParams } from \"../types\";\nimport { useDebounced } from \"./useDebounce\";\nimport { fetchProducts } from \"../infra/products\";\n\nexport function useProducts(params: QueryParams) {\n  const [data, setData] = React.useState<Paged<Product>>({\n    items: [],\n    total: 0,\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<string | null>(null);\n  const stable = useDebounced(params, 300);\n  const fetchNow = React.useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetchProducts(stable);\n      setData(res);\n    } catch (e) {\n      setError((e as Error)?.message || \"Erro ao carregar\");\n    } finally {\n      setLoading(false);\n    }\n  }, [stable]);\n  React.useEffect(() => {\n    fetchNow();\n  }, [fetchNow]);\n  return { ...data, loading, error, retry: fetchNow };\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/hooks/useWishlist.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'useWishlist' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":13,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":5,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":11,"endColumn":7},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":6,"column":12,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":11,"endColumn":6},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 2 to the 0 allowed.","line":6,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":6,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\n\nexport function useWishlist() {\n  const [set, setSet] = React.useState<Set<string>>(new Set());\n  const toggle = (id: string) =>\n    setSet((prev) => {\n      const next = new Set(prev);\n      if (next.has(id)) next.delete(id);\n      else next.add(id);\n      return next;\n    });\n  return { set, toggle, count: set.size };\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/infra/products.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Async function 'fetchProducts' has a complexity of 2. Maximum allowed is 0.","line":5,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":42,"endColumn":2},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":5,"column":23,"nodeType":null,"messageId":"refactorFunction","endLine":5,"endColumn":36},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":10,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":10,"endColumn":73},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":10,"column":44,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":10,"endColumn":72},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 4. Maximum allowed is 0.","line":16,"column":30,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":21,"endColumn":4},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":16,"column":34,"nodeType":null,"messageId":"refactorFunction","endLine":16,"endColumn":36},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 5. Maximum allowed is 0.","line":23,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":36,"endColumn":4},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":23,"column":29,"nodeType":null,"messageId":"refactorFunction","endLine":23,"endColumn":31}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { DATASET } from \"../mocks/dataset\";\nimport type { Paged, Product, QueryParams } from \"../types\";\nimport { rand } from \"../utils/rand\";\n\nexport async function fetchProducts(\n  params: QueryParams\n): Promise<Paged<Product>> {\n  const { page, pageSize, q, categories, sort } = params;\n  // simulate latency\n  const wait = (ms: number) => new Promise((res) => setTimeout(res, ms));\n  await wait(rand(100, 500));\n  if (Math.random() < 0.1) {\n    throw new Error(\"Network error: simulated failure\");\n  }\n  // filter\n  let items = DATASET.filter((p) => {\n    const text = q.trim().toLowerCase();\n    const okText = !text || p.name.toLowerCase().includes(text);\n    const okCat = categories.length === 0 || categories.includes(p.category);\n    return okText && okCat;\n  });\n  // sort\n  items = items.sort((a, b) => {\n    switch (sort) {\n      case \"price_asc\":\n        return a.price - b.price;\n      case \"price_desc\":\n        return b.price - a.price;\n      case \"rating_asc\":\n        return a.rating - b.rating;\n      case \"rating_desc\":\n        return b.rating - a.rating;\n      default:\n        return 0;\n    }\n  });\n  const total = items.length;\n  // paginate\n  const start = (page - 1) * pageSize;\n  const end = start + pageSize;\n  return { items: items.slice(start, end), total };\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/main.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/mocks/categories.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/mocks/dataset.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":7,"column":67,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":33,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import type { Product } from \"../types\";\nimport { rand } from \"../utils/rand\";\nimport { sample } from \"../utils/sample\";\nimport { CATEGORIES } from \"./categories\";\n\n// Generate dataset (200 items)\nexport const DATASET: Product[] = Array.from({ length: 200 }).map((_, i) => {\n  const cat = sample(CATEGORIES);\n  const baseNames: Record<Product[\"category\"], string[]> = {\n    Electronics: [\n      \"Headphones\",\n      \"Keyboard\",\n      \"Mouse\",\n      \"Monitor\",\n      \"Webcam\",\n      \"SSD\",\n    ],\n    Books: [\"Design Patterns\", \"Clean Code\", \"Refactoring\", \"Domain‑Driven\"],\n    Clothing: [\"T‑Shirt\", \"Jeans\", \"Sneakers\", \"Jacket\"],\n    Home: [\"Lamp\", \"Chair\", \"Table\", \"Cushion\"],\n    Toys: [\"Puzzle\", \"Robot\", \"Lego\", \"Doll\"],\n  };\n  const name = `${cat} ${sample(baseNames[cat])} ${i + 1}`;\n  return {\n    id: `p${i + 1}`,\n    name,\n    category: cat,\n    price: rand(30, 1500),\n    rating: rand(1, 5),\n    status: sample([\"in_stock\", \"out_of_stock\", \"preorder\"] as const),\n    description: `Detailed description for ${name}.`,\n  };\n});\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/pages/CatalogComposition/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogComposition' has a complexity of 7. Maximum allowed is 0.","line":15,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":147,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":30,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":33,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":31,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":32,"endColumn":65},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":31,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":31,"endColumn":21},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":32,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":32,"endColumn":50},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":48,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":51,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":55,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":58,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":62,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":65,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":69,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":74,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":98,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":106,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":108,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":108,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { Product, QueryParams } from \"../../types\";\nimport { useProducts } from \"../../hooks/useProducts\";\nimport { useWishlist } from \"../../hooks/useWishlist\";\nimport { SearchInput } from \"../../components/CompositionPattern/SearchInput\";\nimport { ProductCard } from \"../../components/CompositionPattern/ProductCard\";\nimport { Modal } from \"../../components/core/Modal\";\nimport { StarRating } from \"../../components/core/StarRating\";\nimport { Pagination } from \"../../components/CompositionPattern/Pagination\";\nimport { Layout } from \"../../components/CompositionPattern/Layout\";\nimport { Badge } from \"../../components/core/Badge\";\nimport { SortSelect } from \"../../components/CompositionPattern/ShortSelect\";\nimport { CategoryFilter } from \"../../components/CompositionPattern/CategoryFilter\";\n\nexport function CatalogComposition() {\n  const [q, setQ] = React.useState(\"\");\n  const [cats, setCats] = React.useState<string[]>([]);\n  const [sort, setSort] = React.useState<QueryParams[\"sort\"]>(\"price_asc\");\n  const [page, setPage] = React.useState(1);\n  const pageSize = 20;\n  const { items, total, loading, error, retry } = useProducts({\n    page,\n    pageSize,\n    q,\n    categories: cats,\n    sort,\n  });\n  const { set: wish, toggle, count } = useWishlist();\n  const [open, setOpen] = React.useState<Product | null>(null);\n  const toggleCat = (c: string) =>\n    setCats((arr) =>\n      arr.includes(c) ? arr.filter((x) => x !== c) : [...arr, c]\n    );\n\n  const header = (\n    <div className=\"flex items-center justify-between\">\n      <h2 className=\"text-xl font-semibold\">Catálogo (Composition)</h2>\n      <div className=\"text-sm\">\n        Wishlist: <strong>{count}</strong>\n      </div>\n    </div>\n  );\n\n  const toolbar = (\n    <>\n      <SearchInput\n        value={q}\n        onChange={(v) => {\n          setQ(v);\n          setPage(1);\n        }}\n      />\n      <SortSelect\n        value={sort}\n        onChange={(v) => {\n          setSort(v);\n          setPage(1);\n        }}\n      />\n      <CategoryFilter\n        value={cats}\n        onToggle={(c) => {\n          toggleCat(c);\n          setPage(1);\n        }}\n      />\n      <button\n        className=\"border rounded px-3 py-2\"\n        onClick={() => {\n          setQ(\"\");\n          setCats([]);\n          setSort(\"price_asc\");\n          setPage(1);\n        }}\n      >\n        Limpar\n      </button>\n    </>\n  );\n\n  const content = (\n    <div>\n      {loading && <div className=\"p-3 border rounded mb-3\">Carregando…</div>}\n      {error && (\n        <div className=\"p-3 border rounded mb-3 bg-red-50\">\n          <div className=\"flex items-center justify-between\">\n            <span>Erro: {error}</span>\n            <button className=\"border rounded px-2 py-1\" onClick={retry}>\n              Tentar de novo\n            </button>\n          </div>\n        </div>\n      )}\n      {!loading && !error && items.length === 0 && (\n        <div className=\"p-3 border rounded\">Nenhum resultado</div>\n      )}\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n        {items.map((p) => (\n          <ProductCard\n            key={p.id}\n            p={p}\n            wish={wish.has(p.id)}\n            onToggleWish={toggle}\n            onOpen={setOpen}\n          />\n        ))}\n      </div>\n      <Modal open={!!open} onClose={() => setOpen(null)}>\n        {open && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <strong>{open.name}</strong>\n              <Badge status={open.status} />\n            </div>\n            <div>Categoria: {open.category}</div>\n            <div>Preço: R$ {open.price.toFixed(2)}</div>\n            <div>\n              Avaliação: <StarRating value={open.rating} />\n            </div>\n            <p className=\"opacity-80 text-sm\">{open.description}</p>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n\n  const footer = (\n    <div className=\"flex items-center justify-between\">\n      <div className=\"text-sm opacity-80\">Total: {total} itens</div>\n      <Pagination\n        page={page}\n        pageSize={pageSize}\n        total={total}\n        onPage={setPage}\n      />\n    </div>\n  );\n\n  return (\n    <Layout\n      header={header}\n      toolbar={toolbar}\n      content={content}\n      footer={footer}\n    />\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/pages/CatalogCompound/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogCompound' has a complexity of 1. Maximum allowed is 0.","line":3,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":18,"endColumn":2}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Catalog } from \"../../components/CompoundComponents/Catalog\";\n\nexport function CatalogCompound() {\n  return (\n    <Catalog.Root>\n      <Catalog.Header />\n      <div className=\"mb-3 flex gap-3 items-end flex-wrap\">\n        <Catalog.Search />\n        <Catalog.Sort />\n        <Catalog.Filters />\n        <Catalog.Clear />\n      </div>\n      <Catalog.Feedback />\n      <Catalog.List />\n      <Catalog.Footer />\n    </Catalog.Root>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/pages/CatalogHOC/index.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/pages/CatalogPresentationalContainer/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogPresentationalContainer' has a complexity of 4. Maximum allowed is 0.","line":14,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":102,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":29,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":32,"endColumn":6},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":30,"column":13,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":31,"endColumn":65},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":30,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":30,"endColumn":21},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":31,"column":36,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":31,"endColumn":50},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":45,"column":14,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":48,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":50,"column":17,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":53,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":55,"column":22,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":58,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":59,"column":18,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":64,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":84,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":84,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { Product, QueryParams } from \"../../types\";\nimport { useProducts } from \"../../hooks/useProducts\";\nimport { useWishlist } from \"../../hooks/useWishlist\";\nimport { Modal } from \"../../components/core/Modal\";\nimport { StarRating } from \"../../components/core/StarRating\";\nimport { CatalogHeaderUI } from \"../../components/PresentationalAndContainerPattern/CatalogHeaderUI\";\nimport { ToolbarUI } from \"../../components/PresentationalAndContainerPattern/ToolbarUI\";\nimport { FeedbackUI } from \"../../components/PresentationalAndContainerPattern/FeebackUI\";\nimport { ListUI } from \"../../components/PresentationalAndContainerPattern/ListUI\";\nimport { FooterUI } from \"../../components/PresentationalAndContainerPattern/FooterUI/indext\";\nimport { Badge } from \"../../components/core/Badge\";\n\nexport function CatalogPresentationalContainer() {\n  const [q, setQ] = React.useState(\"\");\n  const [cats, setCats] = React.useState<string[]>([]);\n  const [sort, setSort] = React.useState<QueryParams[\"sort\"]>(\"price_asc\");\n  const [page, setPage] = React.useState(1);\n  const pageSize = 20;\n  const { items, total, loading, error, retry } = useProducts({\n    page,\n    pageSize,\n    q,\n    categories: cats,\n    sort,\n  });\n  const { set: wish, toggle, count } = useWishlist();\n  const [open, setOpen] = React.useState<Product | null>(null);\n  const toggleCat = (c: string) =>\n    setCats((arr) =>\n      arr.includes(c) ? arr.filter((x) => x !== c) : [...arr, c]\n    );\n\n  return (\n    <div\n      className=\"p-4 rounded-2xl shadow\"\n      style={{ background: \"#fafafa\", border: \"1px solid #eee\" }}\n    >\n      <CatalogHeaderUI\n        title=\"Catálogo (Presentational & Container)\"\n        count={count}\n      />\n      <ToolbarUI\n        q={q}\n        onQ={(v) => {\n          setQ(v);\n          setPage(1);\n        }}\n        sort={sort}\n        onSort={(v) => {\n          setSort(v);\n          setPage(1);\n        }}\n        cats={cats}\n        onToggleCat={(c) => {\n          toggleCat(c);\n          setPage(1);\n        }}\n        onClear={() => {\n          setQ(\"\");\n          setCats([]);\n          setSort(\"price_asc\");\n          setPage(1);\n        }}\n      />\n      <FeedbackUI\n        loading={loading}\n        error={error}\n        onRetry={retry}\n        empty={!loading && !error && items.length === 0}\n      />\n      <ListUI\n        items={items}\n        wish={wish}\n        onOpen={setOpen}\n        onToggleWish={toggle}\n      />\n      <FooterUI\n        page={page}\n        pageSize={pageSize}\n        total={total}\n        onPage={setPage}\n      />\n      <Modal open={!!open} onClose={() => setOpen(null)}>\n        {open && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <strong>{open.name}</strong>\n              <Badge status={open.status} />\n            </div>\n            <div>Categoria: {open.category}</div>\n            <div>Preço: R$ {open.price.toFixed(2)}</div>\n            <div>\n              Avaliação: <StarRating value={open.rating} />\n            </div>\n            <p className=\"opacity-80 text-sm\">{open.description}</p>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/pages/CatalogRenderProps/index.tsx","messages":[{"ruleId":"complexity","severity":1,"message":"Function 'CatalogRenderProps' has a complexity of 2. Maximum allowed is 0.","line":14,"column":8,"nodeType":"FunctionDeclaration","messageId":"complex","endLine":123,"endColumn":2},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":24,"column":16,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":24,"endColumn":74},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":24,"column":41,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":24,"endColumn":73},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":25,"column":19,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":26,"endColumn":51},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":26,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":26,"endColumn":50},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":27,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":34,"endColumn":8},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 2. Maximum allowed is 0.","line":28,"column":15,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":34,"endColumn":7},{"ruleId":"sonarjs/cognitive-complexity","severity":1,"message":"Refactor this function to reduce its Cognitive Complexity from 1 to the 0 allowed.","line":28,"column":19,"nodeType":null,"messageId":"refactorFunction","endLine":28,"endColumn":21},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":31,"column":31,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":31,"endColumn":45},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":52,"column":20,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":59,"endColumn":15},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 6. Maximum allowed is 0.","line":66,"column":10,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":103,"endColumn":10},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":83,"column":26,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":91,"endColumn":16},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":99,"column":25,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":99,"endColumn":71},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":99,"column":43,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":99,"endColumn":70},{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":105,"column":37,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":105,"endColumn":56}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from \"react\";\nimport type { Product, QueryParams } from \"../../types\";\nimport { useWishlist } from \"../../hooks/useWishlist\";\nimport { SearchInput } from \"../../components/CompositionPattern/SearchInput\";\nimport { Modal } from \"../../components/core/Modal\";\nimport { StarRating } from \"../../components/core/StarRating\";\nimport { Pagination } from \"../../components/CompositionPattern/Pagination\";\nimport { ProductCard } from \"../../components/CompositionPattern/ProductCard\";\nimport { Badge } from \"../../components/core/Badge\";\nimport { SortSelect } from \"../../components/CompositionPattern/ShortSelect\";\nimport { CategoryFilter } from \"../../components/CompositionPattern/CategoryFilter\";\nimport { ProductsFetcher } from \"../../components/RenderProps/ProductsFetcher\";\n\nexport function CatalogRenderProps() {\n  const [params, setParams] = React.useState<QueryParams>({\n    page: 1,\n    pageSize: 20,\n    q: \"\",\n    categories: [],\n    sort: \"price_asc\",\n  });\n  const { set: wish, toggle, count } = useWishlist();\n  const [open, setOpen] = React.useState<Product | null>(null);\n  const setQ = (v: string) => setParams((p) => ({ ...p, q: v, page: 1 }));\n  const setSort = (v: QueryParams[\"sort\"]) =>\n    setParams((p) => ({ ...p, sort: v, page: 1 }));\n  const toggleCat = (c: string) =>\n    setParams((p) => ({\n      ...p,\n      categories: p.categories.includes(c)\n        ? p.categories.filter((x) => x !== c)\n        : [...p.categories, c],\n      page: 1,\n    }));\n  return (\n    <div\n      className=\"p-4 rounded-2xl shadow\"\n      style={{ background: \"#fafafa\", border: \"1px solid #eee\" }}\n    >\n      <div className=\"flex items-center justify-between mb-3\">\n        <h2 className=\"text-xl font-semibold\">Catálogo (Render Props)</h2>\n        <div className=\"text-sm\">\n          Wishlist: <strong>{count}</strong>\n        </div>\n      </div>\n      <div className=\"mb-3 flex gap-3 items-end flex-wrap\">\n        <SearchInput value={params.q} onChange={setQ} />\n        <SortSelect value={params.sort} onChange={setSort} />\n        <CategoryFilter value={params.categories} onToggle={toggleCat} />\n        <button\n          className=\"border rounded px-3 py-2\"\n          onClick={() =>\n            setParams({\n              page: 1,\n              pageSize: 20,\n              q: \"\",\n              categories: [],\n              sort: \"price_asc\",\n            })\n          }\n        >\n          Limpar\n        </button>\n      </div>\n      <ProductsFetcher params={params}>\n        {({ items, total, loading, error, retry }) => (\n          <>\n            {loading && (\n              <div className=\"p-3 border rounded mb-3\">Carregando…</div>\n            )}\n            {error && (\n              <div className=\"p-3 border rounded mb-3 bg-red-50 flex items-center justify-between\">\n                <span>Erro: {error}</span>\n                <button className=\"border rounded px-2 py-1\" onClick={retry}>\n                  Tentar de novo\n                </button>\n              </div>\n            )}\n            {!loading && !error && items.length === 0 && (\n              <div className=\"p-3 border rounded\">Nenhum resultado</div>\n            )}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n              {items.map((p) => (\n                <ProductCard\n                  key={p.id}\n                  p={p}\n                  wish={wish.has(p.id)}\n                  onToggleWish={toggle}\n                  onOpen={setOpen}\n                />\n              ))}\n            </div>\n            <div className=\"flex items-center justify-between mt-3\">\n              <div className=\"text-sm opacity-80\">Total: {total} itens</div>\n              <Pagination\n                page={params.page}\n                pageSize={params.pageSize}\n                total={total}\n                onPage={(pg) => setParams((p) => ({ ...p, page: pg }))}\n              />\n            </div>\n          </>\n        )}\n      </ProductsFetcher>\n      <Modal open={!!open} onClose={() => setOpen(null)}>\n        {open && (\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <strong>{open.name}</strong>\n              <Badge status={open.status} />\n            </div>\n            <div>Categoria: {open.category}</div>\n            <div>Preço: R$ {open.price.toFixed(2)}</div>\n            <div>\n              Avaliação: <StarRating value={open.rating} />\n            </div>\n            <p className=\"opacity-80 text-sm\">{open.description}</p>\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/types.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/utils/rand.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":2,"column":21,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":3,"endColumn":52}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// Random helpers\nexport const rand = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","usedDeprecatedRules":[]},{"filePath":"/home/henriqwe/Documents/projects/tcc/src/utils/sample.ts","messages":[{"ruleId":"complexity","severity":1,"message":"Arrow function has a complexity of 1. Maximum allowed is 0.","line":3,"column":23,"nodeType":"ArrowFunctionExpression","messageId":"complex","endLine":3,"endColumn":71}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { rand } from \"./rand\";\n\nexport const sample = <T>(arr: T[]): T => arr[rand(0, arr.length - 1)];\n","usedDeprecatedRules":[]}]